# PostgreSQL

Run PostgreSQL and PGAdmin using docker compose
https://medium.com/@vishal.sharma./run-postgresql-and-pgadmin-using-docker-compose-34120618bcf9

Setting up PostgreSQL and pgAdmin 4 with Docker
https://medium.com/@marvinjungre/get-postgresql-and-pgadmin-4-up-and-running-with-docker-4a8d81048aea


# EYDAP.GR certificate

Unable to get local issuer certificate when using requests
https://stackoverflow.com/a/75646345/12138247


# BeautifulSoup

Implementing Web Scraping in Python with BeautifulSoup
https://www.geeksforgeeks.org/implementing-web-scraping-python-beautiful-soup/

  - to install the html parser: pip3 install html5lib


# Psycopg2 (to use Postgres within scripts)

Introduction to Psycopg2 module in Python
https://www.geeksforgeeks.org/introduction-to-psycopg2-module-in-python/


# FastAPI

Fast API Tutorial
https://www.youtube.com/playlist?list=PLqAmigZvYxIL9dnYeZEhMoHcoP4zop8-p

FastAPI psycopg3 Tutorial
https://www.fullstackbook.com/blog
https://github.com/fullstackbook/fullstackbook-fastapi-psycopg3

Asynchronous Postgres with Python, FastAPI, and Psycopg 3
https://medium.com/@benshearlaw/asynchronous-postgres-with-python-fastapi-and-psycopg-3-fafa5faa2c08


# Testing

FastAPI Async Tests
https://fastapi.tiangolo.com/advanced/async-tests/

Pytest with async tests: test setup before and after
https://stackoverflow.com/questions/74351637/pytest-with-async-tests-test-setup-before-and-after


# Async/Await

Demystifying Asynchronous Programming in Python: Practical Examples with Async and Await
https://blog.marzeta.pl/demystifying-asynchronous-programming-in-python-practical-examples-with-async-and-await/


# Global variables

# How can I define global variables that are accessible across different requests?
# https://github.com/fastapi/fastapi/issues/592

# How to share variables between HTTP requests in FastAPI?
# https://stackoverflow.com/questions/71260288/how-to-share-variables-between-http-requests-in-fastapi


# Cron jobs

Everything You Need To Know To Use Cron Expressions Like a Pro
https://tech.forums.softwareag.com/t/everything-you-need-to-know-to-use-cron-expressions-like-a-pro/294852


# Python virtual environment

$ python -m venv venv

$ source ./venv/bin/activate

(venv) $ pip install -r requirements.txt

$ uvicorn main:app --port=8000 --reload
$ uvicorn src.main:app --port=8000 --reload

$ http://localhost:8000

$ http://localhost:8000/docs (swagger-ui)

pytest tests/helpers/test_time.py

$ pytest tests/routers/test_savings.py -v -s -k "test_select_days_range_custom_years_avg" 
